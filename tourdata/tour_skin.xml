<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19">

    
  <!-- Spot Style - Default Point Spot Style -->
  <style name="IconDefaultPointSpotStyle"
         url="%FIRSTXML%/spots/hotspot_neutral_sequence_user_defaultpoint0.png"
         visible="false"
         frame="0"
         lastframe="15"
         framewidth="60"
         frameheight="60"
         stopspotsequence="false"
         crop="0|0|60|60"
         onloaded="startspotanimation(0.1);showPermanentTooltip(all);"

         height="60"
         width="60"
         />






    
  <!-- Spot Style - text spot -->
  <style name="Icontextspot"
         url="%FIRSTXML%/spots/trans_user_defaultpoint1.png"
         visible="false"
         rotate="90"
         onloaded="showPermanentTooltip(all);"
         onover="onoverIcontextspot"
         onout="onoutIcontextspot"

         height="10"
         width="10"
         />


  <action name="onoverIcontextspot">
tween(scale, 1.2);


  </action>

  <action name="onoutIcontextspot">
    tween(scale, 1);


  </action>



<!-- ********** -->
<!-- Colored Area -->
<!-- id : coloredarea -->
<!-- ********** -->

  <layer name="coloredarea"
         keep="true"
         type="container"
         align="topleft"
         x="0"
         y="0"
         zorder="1"
         height="100%"
         width="200"
         
         visible="false"
         bgcolor="0xffffff"
         bgalpha="1"
         />

  <events name="coloredareaevents"
    hidetourcontrols="hidecoloredarea();"
    showtourcontrols="showcoloredarea();"
    keep="true"/>

  <action name="hidecoloredarea">
    set(layer[coloredarea].visible, false);
  </action>
  <action name="showcoloredarea">
    set(layer[coloredarea].visible, true);
  </action>


<!-- ********** -->
<!-- Logo -->
<!-- id : logo -->
<!-- ********** -->

  <layer align="topright"
         x="0"
         y="10"
         zorder="2"
         name="logo"
         keep="true"
         visible="false"
         capture="false"

         url="%FIRSTXML%/graphics/logo/logo2.png" 
         handcursor="false"

         height="108"
         width="200"

         />

  <events name="logoevents" 
    onTourStart="showlogo();"
    keep="true" />

  <action name="hidelogo">
    set(layer[logo].visible, false);
  </action>
  <action name="showlogo">
      set(layer[logo].visible, true);
  </action>




<!-- ********** -->
<!-- Toggle Button -->
<!-- id : togglebutton -->
<!-- ********** -->



  <layer name="togglebutton"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton/menu.png" 
         align="topleft"
         x="20"
         y="20"
         zorder="3"
         state="true"
         onclick="togglebuttonOnClick"
         onover="tween(scale, 1.2,0.5,easeOutQuad);"
         onout="tween(scale, 1.0,0.5,easeOutQuad);"
         height="30"
         width="30"
         visible="false"
         />

  <action name="togglebuttonOnClick">
    if (state,
      set(state, false);showTourControls();


      set(url,%FIRSTXML%/graphics/togglebutton/delete.png);
     ,
      set(state, true);hideTourControls();


      set(url,%FIRSTXML%/graphics/togglebutton/menu.png);
    );
  </action>

  <events name="togglebuttonevents" 
    onTourStart="showtogglebutton();"
    keep="true" />
  <action name="hidetogglebutton">set(layer[togglebutton].visible, false);</action>
  <action name="showtogglebutton">set(layer[togglebutton].visible, true);</action>


<!-- ********** -->
<!-- Home Button -->
<!-- id : button -->
<!-- ********** -->

  <layer name="button"
         keep="true"
         url="%FIRSTXML%/graphics/button/buttonhome.png" 
         align="topleft"
         x="0"
         y="50"
         zorder="4"
         visible="false"
         onclick="buttonOnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="60"
         width="200"
         />
  <action name="buttonOnClick">openurl(index.html,_self);


  </action>

  <events name="buttonevents" 
    hidetourcontrols="hidebutton();" 
    showtourcontrols="showbutton();" 
    keep="true" />
  <action name="hidebutton">set(layer[button].visible, false);</action>
  <action name="showbutton">if(tour_displaycontrols,set(layer[button].visible, true);,hidebutton(););</action>


<!-- ********** -->
<!-- Gyro Button -->
<!-- id : togglebutton1 -->
<!-- ********** -->



  <layer name="togglebutton1"
         keep="true"
         url="%FIRSTXML%/graphics/togglebutton1/buttongyrooff.png" 
         align="topleft"
         x="0"
         y="110"
         zorder="5"
         state="true"
         onclick="togglebutton1OnClick"
         alpha="0.7"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         height="60"
         width="200"
         visible="false"
         />

  <action name="togglebutton1OnClick">
    if (state,
      set(state, false);disableGyroscope();


      set(url,%FIRSTXML%/graphics/togglebutton1/buttongyroon.png);
     ,
      set(state, true);enableGyroscope();


      set(url,%FIRSTXML%/graphics/togglebutton1/buttongyrooff.png);
    );
  </action>

  <events name="togglebutton1events" 
    hidetourcontrols="hidetogglebutton1();" 
    showtourcontrols="showtogglebutton1();" 
    keep="true" />
  <action name="hidetogglebutton1">set(layer[togglebutton1].visible, false);</action>
  <action name="showtogglebutton1">if(tour_displaycontrols,set(layer[togglebutton1].visible, true);,hidetogglebutton1(););</action>


<!-- ********* -->
<!-- Gyroscope -->
<!-- ********* -->



<plugin name="gyroscope"
        url="%FIRSTXML%/graphics/gyro2.js"
        keep="true"
        devices="no-desktop.and.html5"

        onunavailable="checkGyroUnavailable();"
        sensor_mode="1"
        friction="auto"
        autocalibration="true"
        touch_mode="full"
        onavailable="delayedcall(1, checkGyroAvailability(););"
        enabled="false"
        activated="false"
        />

<events name="gyroscopeEvents" onnewpano="planarGyroscopeTest();" keep="true" />

<action name="planarGyroscopeTest">
  if(plugin[gyroscope],
          if(scene[get(xml.scene)].full360,
            set(sceneisfull360, false);
            sub(viewhfov, panoview.hmax, panoview.hmin);
            if (viewhfov == 360,
              sub(viewvfov, panoview.vmax, panoview.vmin);
              if (viewvfov == 180,
                set(sceneisfull360, true);
              );
            );
            if (sceneisfull360,
              set(plugin[gyroscope].camroll, true);
            ,
              set(plugin[gyroscope].camroll, false);
            );
          ,
            set(plugin[gyroscope].camroll, false);
          );
  );
</action>

<action name="changeGyroscopeState">
  if(plugin[gyroscope],
    if (plugin[gyroscope].isavailable,
        if(%1,
          set(plugin[gyroscope].activated,true);
        ,
          set(plugin[gyroscope].activated,false);
        );
        if (%1 != plugin[gyroscope].enabled,
          if(plugin[gyroscope].activated,
            switch(plugin[gyroscope].enabled);
          ,
            set(plugin[gyroscope].enabled, false);
          );
          if (plugin[gyroscope].enabled, events.dispatch(ongyroscopeon);, events.dispatch(ongyroscopeoff););
        );
    );
  );
</action>

<action name="checkGyroAvailability">
  if(plugin[gyroscope],
    if (plugin[gyroscope].isavailable,
      ifnot(tour_firstlittleplanet,
        
        switch(plugin[gyroscope].enabled);
        set(plugin[gyroscope].activated,true);
        
        set(tour_gyroscopedevices, true);
        events.dispatch(ongyroscopeavailable);
      ,
        delayedcall(1, checkGyroAvailability(););
      );
    ,
      set(tour_gyroscopedevices, false);
    );
    if (plugin[gyroscope].enabled, events.dispatch(ongyroscopeon);, events.dispatch(ongyroscopeoff););
  ,
    checkGyroUnavailable();
  );
</action>

<action name="checkGyroUnavailable">
  set(plugin[gyroscope].activated, false);
  set(plugin[gyroscope].enabled, false);
  set(tour_gyroscopedevices, false);
  events.dispatch(ongyroscopeunavailable);
</action>

<!-- ********** -->
<!-- VR Button -->
<!-- id : button2 -->
<!-- ********** -->

  <layer name="button2"
         keep="true"
         url="%FIRSTXML%/graphics/button2/buttonvr.png" 
         align="topleft"
         x="0"
         y="170"
         zorder="7"
         visible="false"
         onclick="button2OnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="60"
         width="200"
         />
  <action name="button2OnClick">js(accessWebVr());


  </action>

  <events name="button2events" 
    hidetourcontrols="hidebutton2();" 
    showtourcontrols="showbutton2();" 
    keep="true" />
  <action name="hidebutton2">set(layer[button2].visible, false);</action>
  <action name="showbutton2">if(tour_displaycontrols,set(layer[button2].visible, true);,hidebutton2(););</action>


<!-- ********** -->
<!-- Gallery Button -->
<!-- id : button4 -->
<!-- ********** -->

  <layer name="button4"
         keep="true"
         url="%FIRSTXML%/graphics/button4/buttonbrochure.png" 
         align="topleft"
         x="0"
         y="230"
         zorder="8"
         visible="false"
         onclick="button4OnClick"
         alpha="0.7"
         onout="tween(alpha,0.7,0.5,easeOutQuad);"
         onover="tween(alpha,1.0,0.5,easeOutQuad);"
         height="60"
         width="200"
         />
  <action name="button4OnClick">openurl(gallery.html,_self);


  </action>

  <events name="button4events" 
    hidetourcontrols="hidebutton4();" 
    showtourcontrols="showbutton4();" 
    keep="true" />
  <action name="hidebutton4">set(layer[button4].visible, false);</action>
  <action name="showbutton4">if(tour_displaycontrols,set(layer[button4].visible, true);,hidebutton4(););</action>


  <action name="enableGyroscope">
    changeGyroscopeState(true);
  </action>
  <action name="disableGyroscope">
    changeGyroscopeState(false);
  </action>


	<!-- WebVR plugin for VR availability tests -->

	<plugin name="ptpvrmode" devices="html5" keep="true"
		url="%FIRSTXML%/graphics/webvr.js"
		mobilevr_support="true"
		mobilevr_fake_support="false"
		vr_cursor=""
		vr_cursor_enabled="false"
		onavailable="delayedcall(1, checkVrAvailability(););"
		onunavailable="checkVrUnavailable();"
		/>
	<action name="checkVrAvailability">
		if(plugin[ptpvrmode],
			if (plugin[ptpvrmode].isavailable,
				set(tour_vrdevices, true);
				events.dispatch(onvravailable);
			,
				set(tour_vrdevices, false);
			);
		,
			checkVrUnavailable();
		);
	</action>
	<action name="checkVrUnavailable">
		set(tour_vrdevices, false);
		events.dispatch(onvrunavailable);
	</action>
  <!-- Hide / Show Controls -->
  <action name="hideTourControls">set(tour_displaycontrols, false);events.dispatch(hidetourcontrols);</action>
  <action name="showTourControls">set(tour_displaycontrols, true); events.dispatch(showtourcontrols);</action>


</krpano>